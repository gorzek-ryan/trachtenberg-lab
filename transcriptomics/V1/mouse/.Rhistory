library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Transcriptomics_v1/Mouse/Tasic/filtered_feature_bc_matrix/"
temp.obj.data <- Read10X(data_path, gene.column = 1)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Mouse_V1_Tasic")
temp.obj$species <- "Mouse"
smpl <- read.csv(paste(temp.obj.path, "sample.csv", sep = ""), header = FALSE)
smpl <- read.csv(paste(data_path, "sample.csv", sep = ""), header = FALSE)
rownames(smpl) <- colnames(temp.obj)
smpl
len(smpl)
length(smpl)
nrow(smpl)
temp.obj
colnames(temp.obj)
rownames(temp.obj)
nrow(smpl)
nrow(temp.obj)
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Transcriptomics_v1/Mouse/Tasic/filtered_feature_bc_matrix/"
temp.obj.data <- Read10X(data_path, gene.column = 1)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Mouse_V1_Tasic")
temp.obj$species <- "Mouse"
smpl <- read.csv(paste(data_path, "sample.csv", sep = ""), header = FALSE)
rownames(smpl) <- colnames(temp.obj)
temp.obj <- AddMetaData(temp.obj, smpl, "sample")
clss <- read.csv(paste(data_path, "class.csv", sep = ""), header = FALSE)
rownames(clss) <- colnames(temp.obj)
temp.obj <- AddMetaData(temp.obj, clss, "class")
subclass <- read.csv(paste(data_path, "subclass.csv", sep = ""), header = FALSE)
rownames(subclass) <- colnames(temp.obj)
temp.obj
subclass
subclass <- read.csv(paste(data_path, "subclass.csv", sep = ""), header = FALSE)
rownames(subclass) <- colnames(temp.obj)
temp.obj <- AddMetaData(temp.obj, subclass, "subclass")
type <- read.csv(paste(data_path, "type.csv", sep = ""), header = FALSE)
rownames(type) <- colnames(temp.obj)
temp.obj <- AddMetaData(temp.obj, type, "type")
temp.obj$predicted_doublet <- FALSE
obj.mouse <- temp.obj
VlnPlot(obj.mouse, features = c("nFeature_RNA"), group.by = "sample", raster = FALSE)
VlnPlot(obj.mouse, features = c("nCount_RNA"), group.by = "sample", raster = FALSE)
FeatureScatter(obj.mouse, feature1 = "nCount_RNA", feature2 = "nFeature_RNA", raster = FALSE)
obj.mouse
obj.mouse[[]]
all.genes <- rownames(obj.mouse)
obj.mouse <- NormalizeData(obj.mouse, features = all.genes)
obj.mouse <- FindVariableFeatures(obj.mouse, selection.method = "vst", nfeatures = 3000)
obj.mouse <- ScaleData(obj.mouse, features = all.genes)
obj.mouse <- RunPCA(obj.mouse, features = VariableFeatures(object = obj.mouse))
ElbowPlot(obj.mouse, ndims = 50)
obj.mouse <- FindNeighbors(obj.mouse, dims = 1:30)
obj.mouse <- FindClusters(obj.mouse, resolution = 1, algorithm = 4, method = "igraph")
obj.mouse <- RunUMAP(obj.mouse, dims = 1:30, method="umap-learn")
DimPlot(obj.mouse, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.mouse, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.mouse, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "class", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "subclass", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "type", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.mouse, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "class", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "subclass", label = TRUE, raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "type", label = TRUE, raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.mouse, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.mouse, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "class", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "subclass", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse, reduction = "umap", group.by = "type", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
gc()
gc()
gc()
library(Seurat)
library(SeuratDisk)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(patchwork)
library(dplyr)
library(data.table)
library(clustree)
library(reshape2)
library(tidyr)
library(tidyverse)
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/tools/seurat_functions.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/xgboost/xgboost_train.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/xgboost/plottingFxns.R")
obj.mouse.glutamatergic <- readRDS("E:/Transcriptomics_M1/Mouse/seurat/mouse_m1_glutamatergic.rds")
obj.mouse.glutamatergic <- ClusterSCT(obj.mouse.glutamatergic, c(1))
