library(Seurat)
library(SeuratDisk)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(patchwork)
library(dplyr)
library(data.table)
library(clustree)
library(reshape2)
library(tidyr)
library(gridExtra)
library(stringr)
library(plyr)
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/tools/seurat_functions.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/tools/seurat_integration_functions.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/xgboost/xgboost_train.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/xgboost/plottingFxns.R")
classes <- c("Glutamatergic", "GABAergic", "Nonneuronal")
objs.mouse <- c()
objs.opossum <- c()
objs.i.mouse <- c()
objs.i.opossum <- c()
objs.m.mouse <- c()
objs.m.opossum <- c()
for (cl in classes) {
obj.opossum <- readRDS(paste0("E:/Transcriptomics_M1/Opossum/seurat/opossum_m1_", tolower(cl), "_processed.rds"))
obj.mouse <- readRDS(paste0("E:/Transcriptomics_M1/Mouse/seurat/mouse_m1_", tolower(cl), "_processed.rds"))
objs <- list(obj.opossum, obj.mouse)
obj.integrated <- IntegrateObjects(objs[[1]], objs[[2]], resolutions = c(1, 2), nfeatures = 3000, subsample = 10000)
objs.i <- SplitObject(obj.integrated, split.by = "species")
objs.m <- MapObjects(objs.i[[1]], objs.i[[2]], c("subclass", "type"), assay = "integrated")
objs.mouse <- append(objs.mouse, objs[[2]])
objs.opossum <- append(objs.opossum, objs[[1]])
objs.i.mouse <- append(objs.i.mouse, objs.i[["Mouse"]])
objs.i.opossum <- append(objs.i.opossum, objs.i[["Opossum"]])
objs.m.mouse <- append(objs.m.mouse, objs.m[["Mouse"]])
objs.m.opossum <- append(objs.m.opossum, objs.m[["Opossum"]])
}
gc()
library(Seurat)
library(SeuratDisk)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(patchwork)
library(dplyr)
library(data.table)
library(clustree)
library(reshape2)
library(tidyr)
library(gridExtra)
library(stringr)
library(plyr)
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/tools/seurat_functions.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/tools/seurat_integration_functions.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/xgboost/xgboost_train.R")
source("C:/Ryan/GitHub/trachtenberg-lab/transcriptomics/xgboost/plottingFxns.R")
obj.opossum <- readRDS(paste0("E:/Transcriptomics_V1/Opossum/seurat/opossum_v1_gabaergic_processed.rds"))
obj.mouse.P38 <- readRDS(paste0("E:/Transcriptomics_V1/Mouse/seurat/mouse_v1_P38_gabaergic_processed.rds"))
obj.opossum <- readRDS(paste0("E:/Transcriptomics_V1/Opossum/seurat/opossum_v1_glutamatergic_processed.rds"))
obj.mouse.P38 <- readRDS(paste0("E:/Transcriptomics_V1/Mouse/seurat/mouse_v1_P38_glutamatergic_processed.rds"))
Idents(obj.opossum) <- "subclass"
obj.opossum.IT <- subset(obj.opossum, idents = c("IT"))
Idents(obj.mouse.P38) <- "subclass"
obj.mouse.IT <- subset(obj.mouse.P38, idents = c("L2/3", "L4", "L5IT", "L6IT"))
obj.opossum.IT <- ClusterSCT(obj.opossum.IT, resolutions = c(1))
obj.mouse.IT <- ClusterSCT(obj.mouse.IT, resolutions = c(1))
obj.mouse.IT
opossum.vfs <- VariableFeatures(obj.opossum.IT)
mouse.vfs <- VariableFeatures(obj.mouse.IT)
opossum.vfs
length(intersect(opossum.vfs, mouse.vfs))
opossum.vfs <- VariableFeatures(obj.opossum.IT)
mouse.vfs <- VariableFeatures(obj.mouse.IT)
poss.shared.vfs <- intersect(rownames(obj.opossum.IT), mouse.vfs)
shared.vfs <- intersect(opossum.vfs, mouse.vfs)
length(poss.shared.vfs)
DimPlot(obj.opossum.IT, reduction = "umap", group.by = "sample", label = FALSE, raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.IT, reduction = "umap", group.by = "subclass", label = TRUE, raster = FALSE, shuffle = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.IT, reduction = "umap", group.by = "type", label = TRUE, raster = FALSE, shuffle = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse.IT, reduction = "umap", group.by = "sample", label = FALSE, raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse.IT, reduction = "umap", group.by = "subclass", label = TRUE, raster = FALSE, shuffle = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.mouse.IT, reduction = "umap", group.by = "type", label = TRUE, raster = FALSE, shuffle = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
objs <- list(obj.opossum.IT, obj.mouse.IT)
obj.integrated <- IntegrateObjects(objs[[1]], objs[[2]], resolutions = c(1, 2), nfeatures = 3000, subsample = TRUE)
objs.i <- SplitObject(obj.integrated, split.by = "species")
obj.integrated
obj.integrated[[]]
unique(obj.integrated$species)
obj.mouse.IT$species <- "Mouse"
obj.integrated$species[is.na(obj.integrated$species)] <- "Mouse"
objs.i <- SplitObject(obj.integrated, split.by = "species")
objs.m <- MapObjects(objs.i[[1]], objs.i[[2]], c("subclass", "type"), assay = "integrated")
PlotMapping(PlotMapping(objs.m, ident.order = c("IT", "L2/3", "L5IT", "L5NP", "L5PT", "L6CT", "L6IT", "L6b")))
PlotMapping(objs.m, ident.order = c("IT", "L2/3", "L5IT", "L5NP", "L5PT", "L6CT", "L6IT", "L6b"))
