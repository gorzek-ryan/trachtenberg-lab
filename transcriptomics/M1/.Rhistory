library(lisi)
obj.mouse <- LoadH5Seurat("E:/Mouse_M1/seurat/mouse_m1_gabaergic.h5seurat")
# obj.mouse[["dataset"]] <- "Mouse_M1"
# obj.mouse[["subclass"]] <- paste0(obj.mouse$subclass_label, " Mouse")
obj.opossum <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic_raw_ext.h5seurat")
obj.opossum[["dataset"]] <- "Opossum_M1"
# obj.opossum[["subclass"]] <- paste0(obj.opossum$subclass, " Opossum")
common.features <- intersect(rownames(obj.mouse), rownames(obj.opossum))
obj.combined <- merge(obj.mouse[common.features,], y = obj.opossum[common.features,])
obj.list <- SplitObject(obj.combined, split.by = "dataset")
obj.list[["Mouse_M1"]] <- SCTransform(obj.list[["Mouse_M1"]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE) %>%
RunUMAP(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.list[["Mouse_M1"]], label = TRUE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.list[["Mouse_M1"]], label = TRUE, group.by = "subclass") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.list[["Mouse_M1"]], label = TRUE, group.by = "type") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
obj.list[["Opossum_M1"]] <- SCTransform(obj.list[["Opossum_M1"]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE) %>%
RunUMAP(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.list[["Opossum_M1"]], label = TRUE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
# DimPlot(obj.list[["Opossum_M1"]], label = TRUE, group.by = "subclass") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
# DimPlot(obj.list[["Opossum_M1"]], label = TRUE, group.by = "type") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
features <- SelectIntegrationFeatures(object.list = obj.list, nfeatures = 5000)
obj.list <- PrepSCTIntegration(object.list = obj.list, anchor.features = features)
anchors <- FindIntegrationAnchors(object.list = obj.list, normalization.method = "SCT", anchor.features = features)
obj.combined.sct <- IntegrateData(anchorset = anchors, normalization.method = "SCT", features.to.integrate = common.features)
obj.combined.sct <- RunPCA(obj.combined.sct, verbose = FALSE)
obj.combined.sct <- RunUMAP(obj.combined.sct, reduction = "pca", dims = 1:30, verbose = FALSE)
obj.combined.sct <- FindNeighbors(obj.combined.sct, reduction = "pca", dims = 1:30)
obj.combined.sct <- FindClusters(obj.combined.sct, resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 1) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "RNA_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 1) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "RNA_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.combined.sct.mrk <- PrepSCTFindMarkers(obj.combined.sct, assay = "SCT", verbose = TRUE)
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Chrm3"), split.by = "dataset", raster = FALSE, min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Chrm3"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 1) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Chrm3"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 2) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Chrm3"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Chrm3"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5)
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Sncg"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Vip"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Lamp5"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Chrm2"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Sncg"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Vip"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
Idents(obj.list[["Opossum_M1"]])
obj.list[["Opossum_M1"]][[]]
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 1) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "RNA_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "SCT_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(cowplot)
library(dplyr)
library(SeuratDisk)
library(lisi)
obj.mouse <- LoadH5Seurat("E:/Mouse_M1/seurat/mouse_m1_gabaergic.h5seurat")
# obj.mouse[["dataset"]] <- "Mouse_M1"
# obj.mouse[["subclass"]] <- paste0(obj.mouse$subclass_label, " Mouse")
obj.opossum <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic_raw.h5seurat")
obj.opossum[["dataset"]] <- "Opossum_M1"
# obj.opossum[["subclass"]] <- paste0(obj.opossum$subclass, " Opossum")
common.features <- intersect(rownames(obj.mouse), rownames(obj.opossum))
obj.combined <- merge(obj.mouse[common.features,], y = obj.opossum[common.features,])
obj.list <- SplitObject(obj.combined, split.by = "dataset")
obj.list[["Mouse_M1"]] <- SCTransform(obj.list[["Mouse_M1"]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE) %>%
RunUMAP(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.list[["Mouse_M1"]], label = TRUE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.list[["Mouse_M1"]], label = TRUE, group.by = "subclass") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.list[["Mouse_M1"]], label = TRUE, group.by = "type") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
obj.list[["Opossum_M1"]] <- SCTransform(obj.list[["Opossum_M1"]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE) %>%
RunUMAP(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.list[["Opossum_M1"]], label = TRUE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
# DimPlot(obj.list[["Opossum_M1"]], label = TRUE, group.by = "subclass") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
# DimPlot(obj.list[["Opossum_M1"]], label = TRUE, group.by = "type") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
features <- SelectIntegrationFeatures(object.list = obj.list, nfeatures = 5000)
obj.list <- PrepSCTIntegration(object.list = obj.list, anchor.features = features)
anchors <- FindIntegrationAnchors(object.list = obj.list, normalization.method = "SCT", anchor.features = features)
obj.combined.sct <- IntegrateData(anchorset = anchors, normalization.method = "SCT", features.to.integrate = common.features)
obj.combined.sct <- RunPCA(obj.combined.sct, verbose = FALSE)
obj.combined.sct <- RunUMAP(obj.combined.sct, reduction = "pca", dims = 1:30, verbose = FALSE)
obj.combined.sct <- FindNeighbors(obj.combined.sct, reduction = "pca", dims = 1:30)
obj.combined.sct <- FindClusters(obj.combined.sct, resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 1) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "RNA_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.combined.sct.mrk <- PrepSCTFindMarkers(obj.combined.sct, assay = "SCT", verbose = TRUE)
FeaturePlot(obj.combined.sct.mrk, reduction = "umap", features = c("Sncg"), split.by = "dataset", raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum, reduction = "umap", features = c("Sncg"), raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.opossum
FeaturePlot(obj.mouse, reduction = "umap", features = c("Sncg"), raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.list[["Opossum_M1"]], reduction = "umap", features = c("Sncg"), raster = FALSE, min.cutoff = 0, max.cutoff = 5) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.opossum.gabaergic <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic_raw_ext.h5Seurat")
obj.opossum.gabaergic.list <- SplitObject(obj.opossum.gabaergic, split.by = "sample")
for (sample in names(obj.opossum.gabaergic.list)) {
obj.opossum.gabaergic.list[[sample]] <- SCTransform(obj.opossum.gabaergic.list[[sample]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE)
}
features <- SelectIntegrationFeatures(object.list = obj.opossum.gabaergic.list, nfeatures = 3000)
obj.opossum.gabaergic.list <- PrepSCTIntegration(object.list = obj.opossum.gabaergic.list, anchor.features = features)
obj.opossum.gabaergic.anchors <- FindIntegrationAnchors(object.list = obj.opossum.gabaergic.list, normalization.method = "SCT", anchor.features = features)
obj.opossum.gabaergic.sct <- IntegrateData(anchorset = obj.opossum.gabaergic.anchors, normalization.method = "SCT", features.to.integrate = rownames(obj.opossum.gabaergic))
obj.opossum.gabaergic.sct <- RunPCA(obj.opossum.gabaergic.sct, verbose = FALSE)
obj.opossum.gabaergic.sct <- RunUMAP(obj.opossum.gabaergic.sct, dims = 1:30, method = "umap-learn", reduction = "pca")
obj.opossum.gabaergic.sct <- FindNeighbors(obj.opossum.gabaergic.sct, reduction = "pca", dims = 1:30)
obj.opossum.gabaergic.sct <- FindClusters(obj.opossum.gabaergic.sct, resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(tidyverse)
cluster.sample <- table(obj.opossum.gabaergic.sct$sample, obj.opossum.gabaergic.sct$integrated_snn_res.1) %>%
as.data.frame.matrix() %>%
rownames_to_column(var = "sample")
cluster.sample[-1] <- lapply(cluster.sample[-1], function(x) x/sum(x))
cluster.sample <- cluster.sample %>%
pivot_longer(
cols = -c("sample"),
names_to = "cluster",
values_to = "count"
)
cluster.sample$cluster <- factor(cluster.sample$cluster, levels = unique(cluster.sample$cluster))
ggplot(cluster.sample, aes(x=cluster, y=count, fill=sample)) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Set3") +
theme_minimal()
obj.opossum.gabaergic.sct$op_integrated_snn_res.1 <- obj.opossum.gabaergic.sct$integrated_snn_res.1
SaveH5Seurat(obj.opossum.gabaergic.sct, "E:/Opossum_M1/seurat/temp/opossum_m1_gabaergic_sct_ext_all.h5seurat", overwrite = TRUE, verbose = TRUE)
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.opossum.gabaergic <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic_raw_ext.h5Seurat")
Idents(obj.opossum.gabaergic) <- "sample"
obj.opossum.gabaergic <- subset(obj.opossum.gabaergic, idents = "NW_TX0078-1", invert = TRUE)
obj.opossum.gabaergic.list <- SplitObject(obj.opossum.gabaergic, split.by = "sample")
for (sample in names(obj.opossum.gabaergic.list)) {
obj.opossum.gabaergic.list[[sample]] <- SCTransform(obj.opossum.gabaergic.list[[sample]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE)
}
features <- SelectIntegrationFeatures(object.list = obj.opossum.gabaergic.list, nfeatures = 3000)
obj.opossum.gabaergic.list <- PrepSCTIntegration(object.list = obj.opossum.gabaergic.list, anchor.features = features)
obj.opossum.gabaergic.anchors <- FindIntegrationAnchors(object.list = obj.opossum.gabaergic.list, normalization.method = "SCT", anchor.features = features)
obj.opossum.gabaergic.sct <- IntegrateData(anchorset = obj.opossum.gabaergic.anchors, normalization.method = "SCT", features.to.integrate = rownames(obj.opossum.gabaergic))
obj.opossum.gabaergic.sct <- RunPCA(obj.opossum.gabaergic.sct, verbose = FALSE)
obj.opossum.gabaergic.sct <- RunUMAP(obj.opossum.gabaergic.sct, dims = 1:30, method = "umap-learn", reduction = "pca")
obj.opossum.gabaergic.sct <- FindNeighbors(obj.opossum.gabaergic.sct, reduction = "pca", dims = 1:30)
obj.opossum.gabaergic.sct <- FindClusters(obj.opossum.gabaergic.sct, resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.opossum.gabaergic.sct$op_integrated_snn_res.1 <- obj.opossum.gabaergic.sct$integrated_snn_res.1
SaveH5Seurat(obj.opossum.gabaergic.sct, "E:/Opossum_M1/seurat/temp/opossum_m1_gabaergic_sct_ext_rmv.h5seurat", overwrite = TRUE, verbose = TRUE)
library(tidyverse)
cluster.sample <- table(obj.opossum.gabaergic.sct$sample, obj.opossum.gabaergic.sct$integrated_snn_res.1) %>%
as.data.frame.matrix() %>%
rownames_to_column(var = "sample")
cluster.sample[-1] <- lapply(cluster.sample[-1], function(x) x/sum(x))
cluster.sample <- cluster.sample %>%
pivot_longer(
cols = -c("sample"),
names_to = "cluster",
values_to = "count"
)
cluster.sample$cluster <- factor(cluster.sample$cluster, levels = unique(cluster.sample$cluster))
ggplot(cluster.sample, aes(x=cluster, y=count, fill=sample)) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Set3") +
theme_minimal()
Idents(obj.opossum.gabaergic.sct) <- "integrated_snn_res.1"
obj.opossum.gabaergic.sct <- subset(obj.opossum.gabaergic.sct, idents = c("14", "20"), invert = TRUE)
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Sst"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Pvalb"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Vip"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Lamp5"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Sncg"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Sst"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Pvalb"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Vip"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Lamp5"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Sncg"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Meis2"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Chodl"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Lhx6"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.opossum.gabaergic.sct <- RunPCA(obj.opossum.gabaergic.sct, verbose = FALSE)
obj.opossum.gabaergic.sct <- RunUMAP(obj.opossum.gabaergic.sct, dims = 1:30, method = "umap-learn", reduction = "pca")
obj.opossum.gabaergic.sct <- FindNeighbors(obj.opossum.gabaergic.sct, reduction = "pca", dims = 1:30)
obj.opossum.gabaergic.sct <- FindClusters(obj.opossum.gabaergic.sct, resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, "nFeature_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, "nCount_RNA", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(tidyverse)
cluster.sample <- table(obj.opossum.gabaergic.sct$sample, obj.opossum.gabaergic.sct$integrated_snn_res.1) %>%
as.data.frame.matrix() %>%
rownames_to_column(var = "sample")
cluster.sample[-1] <- lapply(cluster.sample[-1], function(x) x/sum(x))
cluster.sample <- cluster.sample %>%
pivot_longer(
cols = -c("sample"),
names_to = "cluster",
values_to = "count"
)
cluster.sample$cluster <- factor(cluster.sample$cluster, levels = unique(cluster.sample$cluster))
ggplot(cluster.sample, aes(x=cluster, y=count, fill=sample)) +
geom_bar(stat="identity") +
scale_fill_brewer(palette = "Set3") +
theme_minimal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Sst"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Pvalb"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Vip"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Lamp5"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Sncg"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Meis2"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Chodl"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sct, reduction = "umap", features = c("Lhx6"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# Idents(obj.opossum.gabaergic) <- "subclass"
obj.opossum.gabaergic.sct$op_integrated_snn_res.1 <- obj.opossum.gabaergic.sct$integrated_snn_res.1
SaveH5Seurat(obj.opossum.gabaergic.sct, "E:/Opossum_M1/seurat/opossum_m1_gabaergic_sct_ext_rmv.h5seurat", overwrite = TRUE, verbose = TRUE)
obj.opossum.gabaergic.sct
rownames(obj.opossum.gabaergic.sct)
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(cowplot)
library(dplyr)
library(SeuratDisk)
library(lisi)
obj.mouse <- LoadH5Seurat("E:/Mouse_M1/seurat/mouse_m1_gabaergic.h5seurat")
# obj.mouse[["dataset"]] <- "Mouse_M1"
# obj.mouse[["subclass"]] <- paste0(obj.mouse$subclass_label, " Mouse")
obj.opossum <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic_sct_ext_rmv.h5seurat")
obj.opossum[["dataset"]] <- "Opossum_M1"
# obj.opossum[["subclass"]] <- paste0(obj.opossum$subclass, " Opossum")
common.features <- intersect(rownames(obj.mouse), rownames(obj.opossum))
obj.combined <- merge(obj.mouse[common.features,], y = obj.opossum[common.features,])
obj.list <- SplitObject(obj.combined, split.by = "dataset")
obj.list[["Mouse_M1"]] <- SCTransform(obj.list[["Mouse_M1"]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE) %>%
RunUMAP(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.list[["Mouse_M1"]], label = TRUE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.list[["Mouse_M1"]], label = TRUE, group.by = "subclass") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.list[["Mouse_M1"]], label = TRUE, group.by = "type") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
obj.list[["Opossum_M1"]] <- SCTransform(obj.list[["Opossum_M1"]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE) %>%
RunUMAP(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindNeighbors(reduction = "pca", dims = 1:30, verbose = FALSE) %>%
FindClusters(resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.list[["Opossum_M1"]], label = TRUE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
# DimPlot(obj.list[["Opossum_M1"]], label = TRUE, group.by = "subclass") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
# DimPlot(obj.list[["Opossum_M1"]], label = TRUE, group.by = "type") + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
features <- SelectIntegrationFeatures(object.list = obj.list, nfeatures = 5000)
obj.list <- PrepSCTIntegration(object.list = obj.list, anchor.features = features)
anchors <- FindIntegrationAnchors(object.list = obj.list, normalization.method = "SCT", anchor.features = features)
obj.combined.sct <- IntegrateData(anchorset = anchors, normalization.method = "SCT", features.to.integrate = common.features)
obj.combined.sct <- RunPCA(obj.combined.sct, verbose = FALSE)
obj.combined.sct <- RunUMAP(obj.combined.sct, reduction = "pca", dims = 1:30, verbose = FALSE)
obj.combined.sct <- FindNeighbors(obj.combined.sct, reduction = "pca", dims = 1:30)
obj.combined.sct <- FindClusters(obj.combined.sct, resolution = 1, algorithm = 4, method = "igraph")
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 1) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "RNA_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "op_integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.opossum.gabaergic <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic_sct_ext_rmv.h5seurat")
obj.opossum.gabaergic
obj.opossum.gabaergic[[]]
DimPlot(obj.opossum.gabaergic, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Sst"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Pvalb"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Vip"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Lamp5"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Sncg"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DefaultAssay(obj.opossum.gabaergic) <- "RNA"
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Sst"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Pvalb"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Vip"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Lamp5"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Sncg"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Meis2"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Chodl"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Lhx6"), min.cutoff = 0) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
Idents(obj.opossum.gabaergic) <- "integrated_snn_res.1"
obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic, idents = c("3", "5", "12", "13", "16", "19", "22"))
Idents(obj.opossum.gabaergic.sst) <- "integrated_snn_res.1"
all.markers.sst <- FindAllMarkers(obj.opossum.gabaergic.sst, only.pos = TRUE)
all.markers.sst.3 <- subset(all.markers.sst, cluster == 3)
all.markers.sst.5 <- subset(all.markers.sst, cluster == 5)
all.markers.sst.12 <- subset(all.markers.sst, cluster == 12)
all.markers.sst.13 <- subset(all.markers.sst, cluster == 13)
all.markers.sst.16 <- subset(all.markers.sst, cluster == 16)
all.markers.sst.19 <- subset(all.markers.sst, cluster == 19)
all.markers.sst.22 <- subset(all.markers.sst, cluster == 22)
View(all.markers.sst.3)
View(all.markers.sst.3)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Ptpn7")  + xlim(-5, 10) + ylim(-10, 5) + coord_equal()
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Ptpn7")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DefaultAssay(obj.opossum.gabaergic) <- "integrated"
Idents(obj.opossum.gabaergic) <- "integrated_snn_res.1"
obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic, idents = c("3", "5", "12", "13", "16", "19", "22"))
Idents(obj.opossum.gabaergic.sst) <- "integrated_snn_res.1"
all.markers.sst <- FindAllMarkers(obj.opossum.gabaergic.sst, only.pos = TRUE)
obj.opossum.gabaergic.mrk <- PrepSCTFindMarkers(obj.opossum.gabaergic)
obj.opossum.gabaergic.mrk
DefaultAssay(obj.opossum.gabaergic.mrk) <- "integrated"
Idents(obj.opossum.gabaergic.mrk) <- "integrated_snn_res.1"
obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic.mrk, idents = c("3", "5", "12", "13", "16", "19", "22"))
all.markers.sst <- FindAllMarkers(obj.opossum.gabaergic.sst, assay = "SCT", only.pos = TRUE, recorrect_umi = FALSE)
all.markers.sst.3 <- subset(all.markers.sst, cluster == 3)
View(all.markers.sst.3)
View(all.markers.sst.3)
all.markers.sst.5 <- subset(all.markers.sst, cluster == 5)
View(all.markers.sst.5)
View(all.markers.sst.5)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Col8a1")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
all.markers.sst.12 <- subset(all.markers.sst, cluster == 12)
View(all.markers.sst.12)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Vcan")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
all.markers.sst.13 <- subset(all.markers.sst, cluster == 13)
View(all.markers.sst.13)
View(all.markers.sst.13)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Plpp4")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DefaultAssay(obj.opossum.gabaergic) <- "integrated"
obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 0.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 0.7, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 1, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 1.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 2, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 2.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 3, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 3.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 4, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 4.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 5, algorithm = 4, method = "igraph")
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.0.5", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "subclass", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "type", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "integrated_snn_res.0.5", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.0.7", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.1.5", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.2", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.3", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.4", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DefaultAssay(obj.opossum.gabaergic) <- "integrated"
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 0.5, algorithm = 4, method = "igraph")
obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 0.8, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 1, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 1.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 2, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 2.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 3, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 3.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 4, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 4.5, algorithm = 4, method = "igraph")
# obj.opossum.gabaergic <- FindClusters(obj.opossum.gabaergic, resolution = 5, algorithm = 4, method = "igraph")
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "subclass", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "type", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "integrated_snn_res.0.5", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "integrated_snn_res.0.8", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.1.5", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.2", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.3", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.opossum.gabaergic, reduction = "umap", group.by = "SCT_snn_res.4", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.opossum.gabaergic.mrk <- PrepSCTFindMarkers(obj.opossum.gabaergic)
DefaultAssay(obj.opossum.gabaergic.mrk) <- "integrated"
Idents(obj.opossum.gabaergic.mrk) <- "integrated_snn_res.0.8"
obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic.mrk, idents = c("5", "7", "9", "12", "14", "17", "20"))
# obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic.mrk, idents = c("3", "5", "12", "13", "16", "19", "22"))
all.markers.sst <- FindAllMarkers(obj.opossum.gabaergic.sst, assay = "SCT", only.pos = TRUE, recorrect_umi = FALSE)
all.markers.sst.9 <- subset(all.markers.sst, cluster == 9)
View(all.markers.sst.9)
View(all.markers.sst.9)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.0.8", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Nfib")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
all.markers.sst.7 <- subset(all.markers.sst, cluster == 7)
View(all.markers.sst.7)
View(all.markers.sst.7)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.0.8", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Pnisr")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.0.8", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Pnisr", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.0.8", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Nlgn1", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.0.8", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "Usp35", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DefaultAssay(obj.opossum.gabaergic.mrk) <- "integrated"
Idents(obj.opossum.gabaergic.mrk) <- "integrated_snn_res.1"
# obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic.mrk, idents = c("5", "7", "9", "12", "14", "17", "20"))
obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic.mrk, idents = c("3", "5", "12", "13", "16", "19", "22"))
all.markers.sst <- FindAllMarkers(obj.opossum.gabaergic.sst, assay = "SCT", only.pos = TRUE, recorrect_umi = FALSE)
all.markers.sst.3 <- subset(all.markers.sst, cluster == 3)
View(all.markers.sst.3)
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "ENSMODG00000016171", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.opossum.gabaergic.sst, reduction = "umap", group.by = "integrated_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic.sst, "ENSMODG00000023381", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.list
obj.opossum.cspace <- obj.list[["Opossum_M1"]]
rm(all.markers.sst)
rm(all.markers.sst.12)
rm(all.markers.sst.13)
rm(all.markers.sst.15)
rm(all.markers.sst.16)
rm(all.markers.sst.22)
rm(all.markers.sst.19)
rm(all.markers.sst.3)
rm(all.markers.sst.5)
rm(all.markers.sst.7)
rm(all.markers.sst.9)
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 1) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "SCT_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "op_integrated_snn_res.1", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.opossum.cspace
obj.opossum.cspace[["integrated"]]
obj.opossum.cspace[["integrated"]]
obj.combined
obj.opossum.cspace
Idents(obj.opossum.cspace) <- "SCT_snn_res.1"
DimPlot(obj.opossum.cspace, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
Idents(obj.opossum.cspace) <- "SCT_snn_res.1"
DimPlot(obj.opossum.cspace, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.cspace, "Sst")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
Idents(obj.opossum.cspace) <- "SCT_snn_res.1"
DimPlot(obj.opossum.cspace, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.cspace, "Sncg")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.opossum.cspace.mrk <- PrepSCTFindMarkers(obj.opossum.cspace)
Idents(obj.opossum.cspace) <- "SCT_snn_res.1"
DimPlot(obj.opossum.cspace, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.cspace, "Sst")  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DefaultAssay(obj.opossum.cspace) <- "integrated"
Idents(obj.opossum.cspace) <- "SCT_snn_res.1"
# obj.opossum.gabaergic.sst <- subset(obj.opossum.gabaergic.mrk, idents = c("5", "7", "9", "12", "14", "17", "20"))
obj.opossum.cspace.sst <- subset(obj.opossum.cspace, idents = c("4", "7", "8", "10", "16", "19"))
all.markers.sst <- FindAllMarkers(obj.opossum.cspace.sst, only.pos = TRUE)
all.markers.sst.4 <- subset(all.markers.sst, cluster == 4)
View(all.markers.sst.4)
View(all.markers.sst.4)
DimPlot(obj.opossum.cspace.sst, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.cspace.sst, "Col8a1", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
all.markers.sst.8 <- subset(all.markers.sst, cluster == 8)
View(all.markers.sst.8)
all.markers.sst.7 <- subset(all.markers.sst, cluster == 7)
View(all.markers.sst.7)
DimPlot(obj.opossum.cspace.sst, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.cspace.sst, "Plpp4", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
all.markers.sst.16 <- subset(all.markers.sst, cluster == 16)
View(all.markers.sst.16)
DimPlot(obj.opossum.cspace.sst, reduction = "umap", group.by = "SCT_snn_res.1", label = TRUE, label.size = 4, raster = FALSE) + NoLegend()  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.cspace.sst, "Htr2a", min.cutoff = 0)  + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.opossum.gabaergic <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic.h5Seurat")
