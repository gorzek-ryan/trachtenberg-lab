human.counts <- human.counts[, -1]
human.counts$species <- "Human"
human.counts$Stac <- 0
human.counts$Frem1 <- 0
human.counts$Meis2 <- 0
human.counts$Peri <- 0
human.counts$SMC <- 0
human.counts$Pvalb <- human.counts$Pvalb + human.counts$Chandelier
human.counts$Lamp5 <- human.counts$Lamp5 + human.counts$Lamp5_Lhx6
human.counts$Sst <- human.counts$Sst + human.counts$Sst.Chodl
human.counts$Glutamatergic <- rowSums(human.counts[, c("L2.3.IT", "L4.IT", "L5.ET", "L5.IT", "L5.6.NP", "L6.CT", "L6.IT", "L6.IT.Car3", "L6b")])
human.counts$GABAergic <- rowSums(human.counts[, c("Pvalb", "Sst", "Vip", "Sncg", "Lamp5", "Pax6")])
human.counts$MGE <- rowSums(human.counts[, c("Pvalb", "Sst")])
human.counts$CGE <- rowSums(human.counts[, c("Vip", "Lamp5", "Sncg")])
human.counts$Neuronal <- rowSums(human.counts[, c("Glutamatergic", "GABAergic")])
human.counts$Nonneuronal <- rowSums(human.counts[, c("Astro", "Endo", "Micro.PVM", "Oligo", "OPC", "Peri", "SMC", "VLMC")])
# chimp.counts <- read.csv("G:/Shared drives/Opossum transcriptomics/figures/Figure_1_Chimp_Subclass_Sample.csv")
# chimp.counts <- chimp.counts[-1, ]
# rownames(chimp.counts) <- chimp.counts$X
# chimp.counts <- chimp.counts[, -1]
# chimp.counts$Pvalb <- chimp.counts$Pvalb + chimp.counts$Chandelier
# chimp.counts$Lamp5 <- chimp.counts$Lamp5 + chimp.counts$Lamp5_Lhx6
# chimp.counts$Peri <- 0
# chimp.counts$SMC <- 0
# chimp.counts$Glutamatergic <- rowSums(chimp.counts[, c("L2.3.IT", "L5.ET", "L5.IT", "L5.6.NP", "L6.CT", "L6.IT", "L6b")])
# chimp.counts$GABAergic <- rowSums(chimp.counts[, c("Pvalb", "Sst", "Sst.Chodl", "Vip", "Sncg", "Lamp5", "Pax6")])
# chimp.counts$Nonneuronal <- rowSums(chimp.counts[, c("Astro", "Endo", "Micro.PVM", "Oligo", "OPC", "Peri", "SMC", "VLMC")])
# chimp.counts$Neuronal <- rowSums(chimp.counts[, c("Glutamatergic", "GABAergic")])
# chimp.counts$L4.IT <- 0
# chimp.counts$Stac <- 0
# chimp.counts$Frem1 <- 0
# chimp.counts$Meis2 <- 0
# chimp.counts$species <- "Chimp"
# marmoset.counts <- read.csv("G:/Shared drives/Opossum transcriptomics/figures/Figure_1_Marmoset_Subclass_Sample.csv")
# marmoset.counts <- marmoset.counts[-1, ]
# rownames(marmoset.counts) <- marmoset.counts$X
# marmoset.counts <- marmoset.counts[, -1]
# marmoset.counts$Pvalb <- marmoset.counts$Pvalb + marmoset.counts$Chandelier
# marmoset.counts$Lamp5 <- marmoset.counts$Lamp5 + marmoset.counts$Lamp5_Lhx6
# marmoset.counts$Peri <- 0
# marmoset.counts$SMC <- 0
# marmoset.counts$Glutamatergic <- rowSums(marmoset.counts[, c("L2.3.IT", "L5.ET", "L5.IT", "L5.6.NP", "L6.CT", "L6.IT", "L6b")])
# marmoset.counts$GABAergic <- rowSums(marmoset.counts[, c("Pvalb", "Sst", "Sst.Chodl", "Vip", "Sncg", "Lamp5", "Pax6")])
# marmoset.counts$Nonneuronal <- rowSums(marmoset.counts[, c("Astro", "Endo", "Micro.PVM", "Oligo", "OPC", "Peri", "SMC", "VLMC")])
# marmoset.counts$Neuronal <- rowSums(marmoset.counts[, c("Glutamatergic", "GABAergic")])
# marmoset.counts$L4.IT <- 0
# marmoset.counts$Stac <- 0
# marmoset.counts$Frem1 <- 0
# marmoset.counts$Meis2 <- 0
# marmoset.counts$species <- "Marmoset"
mouse.counts <- read.csv("G:/Shared drives/Opossum transcriptomics/figures/Figure_1_Mouse_Subclass_Sample.csv")
mouse.counts <- mouse.counts[-1, ]
rownames(mouse.counts) <- mouse.counts$X
mouse.counts <- mouse.counts[, -1]
mouse.counts$species <- "Mouse"
mouse.counts$L4.IT <- 0
mouse.counts$L6.IT.Car3 <- 0
mouse.counts$Stac <- 0
mouse.counts$Frem1 <- 0
mouse.counts$Lamp5_Lhx6 <- 0
mouse.counts$Chandelier <- 0
mouse.counts$Pax6 <- 0
mouse.counts$Sst <- mouse.counts$Sst + mouse.counts$Sst.Chodl
mouse.counts$Glutamatergic <- rowSums(mouse.counts[, c("L2.3.IT", "L5.ET", "L5.IT", "L5.6.NP", "L6.CT", "L6.IT", "L6b")])
mouse.counts$GABAergic <- rowSums(mouse.counts[, c("Pvalb", "Sst", "Vip", "Sncg", "Lamp5", "Meis2")])
mouse.counts$MGE <- rowSums(mouse.counts[, c("Pvalb", "Sst")])
mouse.counts$CGE <- rowSums(mouse.counts[, c("Vip", "Lamp5", "Sncg")])
mouse.counts$Neuronal <- rowSums(mouse.counts[, c("Glutamatergic", "GABAergic")])
mouse.counts$Nonneuronal <- rowSums(mouse.counts[, c("Astro", "Endo", "Micro.PVM", "Oligo", "OPC", "Peri", "SMC", "VLMC")])
opossum.counts <- read.csv("G:/Shared drives/Opossum transcriptomics/figures/Figure_1_Opossum_Subclass_Sample.csv")
rownames(opossum.counts) <- opossum.counts$X
opossum.counts <- opossum.counts[, -1]
opossum.counts$species <- "Opossum"
opossum.counts$L4.IT <- 0
opossum.counts$L6.IT <- 0
opossum.counts$Sncg <- 0
opossum.counts$Meis2 <- 0
opossum.counts$SMC <- 0
opossum.counts$Stac <- 0
opossum.counts$Frem1 <- 0
opossum.counts$Lamp5_Lhx6 <- 0
opossum.counts$Chandelier <- 0
opossum.counts$L6.IT.Car3 <- 0
opossum.counts$Pax6 <- 0
opossum.counts$Sst.Chodl <- 0
opossum.counts$Peri <- 0
opossum.counts$Glutamatergic <- rowSums(opossum.counts[, c("L2.3.IT", "L5.ET", "L5.IT", "L5.6.NP", "L6.CT", "L6b")])
opossum.counts$GABAergic <- rowSums(opossum.counts[, c("Pvalb", "Sst", "Vip", "Lamp5")])
opossum.counts$MGE <- rowSums(opossum.counts[, c("Pvalb", "Sst")])
opossum.counts$CGE <- rowSums(opossum.counts[, c("Vip", "Lamp5", "Sncg")])
opossum.counts$Neuronal <- rowSums(opossum.counts[, c("Glutamatergic", "GABAergic")])
opossum.counts$Nonneuronal <- rowSums(opossum.counts[, c("Astro", "Endo", "Micro.PVM", "Oligo", "OPC", "Peri", "VLMC")])
# ymouse.counts <- read.csv("G:/Shared drives/Opossum transcriptomics/figures/Figure_1_YoungMouse2_Subclass_Sample.csv")
# rownames(ymouse.counts) <- ymouse.counts$X
# ymouse.counts <- ymouse.counts[, -1]
# ymouse.counts$Glutamatergic <- rowSums(ymouse.counts[, c("L2.3.IT", "L5.ET", "L4.IT", "L5.IT", "L5.6.NP", "L6.CT", "L6.IT", "L6b")])
# ymouse.counts$GABAergic <- rowSums(ymouse.counts[, c("Pvalb", "Sst", "Sst.Chodl", "Vip", "Lamp5", "Stac", "Frem1")])
# ymouse.counts$Nonneuronal <- rowSums(ymouse.counts[, c("Astro", "Endo", "Micro.PVM", "Oligo", "OPC", "Peri", "VLMC")])
# ymouse.counts$Neuronal <- rowSums(ymouse.counts[, c("Glutamatergic", "GABAergic")])
# ymouse.counts$Sncg <- 0
# ymouse.counts$Meis2 <- 0
# ymouse.counts$SMC <- 0
# ymouse.counts$L5.IT <- ymouse.counts$L4.IT + ymouse.counts$L5.IT
# ymouse.counts$species <- "Young Mouse"
both.counts <- rbind(human.counts, mouse.counts)
both.counts <- rbind(both.counts, opossum.counts)
both.counts$sample <- rownames(both.counts)
both.counts <- both.counts %>%
mutate(L2.3.IT = L2.3.IT / Glutamatergic,
L5.ET = L5.ET / Glutamatergic,
L5.IT = L5.IT / Glutamatergic,
L5.6.NP = L5.6.NP / Glutamatergic,
L6.CT = L6.CT / Glutamatergic,
L6.IT = L6.IT / Glutamatergic,
L6b = L6b / Glutamatergic,
Pvalb_CGE = Pvalb / (Pvalb + CGE),
CGE_Pvalb = CGE / (CGE + Pvalb),
Pvalb = Pvalb / GABAergic,
Sst = Sst / GABAergic,
Vip = Vip / GABAergic,
Sncg = Sncg / GABAergic,
Lamp5 = Lamp5 / GABAergic,
Meis2 = Meis2 / GABAergic,
MGE = MGE / GABAergic,
CGE = CGE / GABAergic,
EI = Glutamatergic / GABAergic,
Glutamatergic = Glutamatergic / Neuronal,
GABAergic = GABAergic / Neuronal
)
scatter.counts <- both.counts
both.counts <- both.counts %>%
pivot_longer(
cols = c("L2.3.IT", "L5.ET", "L5.IT", "L5.6.NP", "L6.CT", "L6.IT", "L6b", "Pvalb", "Sst", "Vip", "Sncg", "Lamp5", "Meis2", "Glutamatergic", "GABAergic", "Nonneuronal", "Neuronal", "MGE", "CGE", "Pvalb_CGE", "CGE_Pvalb", "EI"),
names_to = "cell.identity",
values_to = "fraction"
)
both.counts$species <- factor(both.counts$species, levels = c("Opossum", "Mouse", "Human"))
class.counts <- both.counts[both.counts$cell.identity %in% c("EI"), ]
ggplot(class.counts, aes(x = factor(cell.identity, level = c("EI")), y = fraction, fill = species)) +
geom_bar(stat = "summary", fun = "median", position = position_dodge(width = 0.8), width = 0.75) +
geom_point(colour = "black", position = position_dodge(width = 0.8), size = 1) +
scale_x_discrete(labels = c("")) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), expand = c(0, 0), limits = c(0, 1)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
theme_classic() + theme(axis.text = element_text(color = "black"), legend.text = element_text(size = 10)) +
labs(x = NULL, y = "E/I Ratio", fill = NULL) +
scale_fill_manual("legend", values = c("Opossum" = "#c692b8", "Mouse" = "#aaaaaa", "Human" = "#f1c296"))
# ggsave(file="G:/Shared drives/Opossum transcriptomics/figures/HMO_Class_Proportion.svg", plot=hmo_class, width=3.5, height=3, dpi=500)
# ggsave(file="G:/Shared drives/Opossum transcriptomics/figures/HMO_Class_Proportion.png", plot=hmo_class, width=3.5, height=3, dpi=500)
class.counts
both.counts$species <- factor(both.counts$species, levels = c("Opossum", "Mouse", "Human"))
class.counts <- both.counts[both.counts$cell.identity %in% c("EI"), ]
ggplot(class.counts, aes(x = factor(cell.identity, level = c("EI")), y = fraction, fill = species)) +
geom_bar(stat = "summary", fun = "median", position = position_dodge(width = 0.8), width = 0.75) +
geom_point(colour = "black", position = position_dodge(width = 0.8), size = 1) +
scale_x_discrete(labels = c("")) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), expand = c(0, 0), limits = c(0, 10)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
theme_classic() + theme(axis.text = element_text(color = "black"), legend.text = element_text(size = 10)) +
labs(x = NULL, y = "E/I Ratio", fill = NULL) +
scale_fill_manual("legend", values = c("Opossum" = "#c692b8", "Mouse" = "#aaaaaa", "Human" = "#f1c296"))
# ggsave(file="G:/Shared drives/Opossum transcriptomics/figures/HMO_Class_Proportion.svg", plot=hmo_class, width=3.5, height=3, dpi=500)
# ggsave(file="G:/Shared drives/Opossum transcriptomics/figures/HMO_Class_Proportion.png", plot=hmo_class, width=3.5, height=3, dpi=500)
both.counts$species <- factor(both.counts$species, levels = c("Opossum", "Mouse", "Human"))
class.counts <- both.counts[both.counts$cell.identity %in% c("EI"), ]
ggplot(class.counts, aes(x = factor(cell.identity, level = c("EI")), y = fraction, fill = species)) +
geom_bar(stat = "summary", fun = "median", position = position_dodge(width = 0.8), width = 0.75) +
geom_point(colour = "black", position = position_dodge(width = 0.8), size = 1) +
scale_x_discrete(labels = c("")) +
scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), expand = c(0, 0), limits = c(0, 10)) +
guides(fill = guide_legend(override.aes = list(shape = NA))) +
theme_classic() + theme(axis.text = element_text(color = "black"), legend.text = element_text(size = 10)) +
labs(x = NULL, y = "E/I Ratio", fill = NULL) +
scale_fill_manual("legend", values = c("Opossum" = "#c692b8", "Mouse" = "#aaaaaa", "Human" = "#f1c296"))
# ggsave(file="G:/Shared drives/Opossum transcriptomics/figures/HMO_Class_Proportion.svg", plot=hmo_class, width=3.5, height=3, dpi=500)
# ggsave(file="G:/Shared drives/Opossum transcriptomics/figures/HMO_Class_Proportion.png", plot=hmo_class, width=3.5, height=3, dpi=500)
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "ts_integrated_snn_res.1", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
obj.combined.sct
obj.combined.sct[[]]
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass_label", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "ts_integrated_snn_res.1", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass_label", split.by = "dataset", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "ts_integrated_snn_res.1", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass_label", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "ts_integrated_snn_res.1", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "dataset", raster = FALSE, shuffle = TRUE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "subclass_label", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.combined.sct, reduction = "umap", group.by = "ts_integrated_snn_res.1", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", raster = FALSE, label = TRUE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
# DimPlot(obj.combined.sct, reduction = "umap", group.by = "type", split.by = "dataset", label = TRUE, raster = FALSE, label.size = 2) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Cat_M1/output/"
sample_IDs <- c("NW_TX0132-3", "NW_TX0133-5", "NW_TX0133-6", "NW_TX0133-7", "NW_TX0135-6", "NW_TX0135-7",
"NW_TX0137-1", "NW_TX0137-2", "NW_TX0141-12", "NW_TX0142-1", "NW_TX0145-9", "NW_TX0146-3")
objs <- c()
for (sample in sample_IDs) {
temp.obj.path <- paste(data_path, sample, "/outs/filtered_feature_bc_matrix/", sep = "")
temp.obj.data <- Read10X(temp.obj.path)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Cat_M1")
temp.obj$sample <- sample
temp.obj <- scrublet_R(seurat_obj = temp.obj)
objs <- append(objs, temp.obj)
}
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Cat_M1/output/"
sample_IDs <- c("NW_TX0132-3",  "NW_TX0135-6", "NW_TX0135-7", # "NW_TX0133-5", "NW_TX0133-6", "NW_TX0133-7",
"NW_TX0137-1", "NW_TX0137-2", "NW_TX0141-12", "NW_TX0142-1", "NW_TX0145-9", "NW_TX0146-3")
objs <- c()
for (sample in sample_IDs) {
temp.obj.path <- paste(data_path, sample, "/outs/filtered_feature_bc_matrix/", sep = "")
temp.obj.data <- Read10X(temp.obj.path)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Cat_M1")
temp.obj$sample <- sample
temp.obj <- scrublet_R(seurat_obj = temp.obj)
objs <- append(objs, temp.obj)
}
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Cat_M1/output/"
sample_IDs <- c("NW_TX0132-3", "NW_TX0133-5", "NW_TX0135-7", # "NW_TX0133-6", "NW_TX0133-7", "NW_TX0135-6",
"NW_TX0137-1", "NW_TX0137-2", "NW_TX0141-12", "NW_TX0142-1", "NW_TX0145-9", "NW_TX0146-3")
objs <- c()
for (sample in sample_IDs) {
temp.obj.path <- paste(data_path, sample, "/outs/filtered_feature_bc_matrix/", sep = "")
temp.obj.data <- Read10X(temp.obj.path)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Cat_M1")
temp.obj$sample <- sample
temp.obj <- scrublet_R(seurat_obj = temp.obj)
objs <- append(objs, temp.obj)
}
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.opossum.gabaergic <- LoadH5Seurat("E:/Opossum_M1/seurat/opossum_m1_gabaergic.h5Seurat") # _raw
DimPlot(obj.opossum.gabaergic, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Gad1")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Gad2")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Sst")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Pvalb")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Vip")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Lamp5")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Sncg")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Meis2")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.opossum.gabaergic, reduction = "umap", features = c("Chodl")) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.human.gabaergic <- LoadH5Seurat("E:/Human_M1/seurat/human_m1_gabaergic.h5Seurat")
obj.human.gabaergic <- SplitObject(obj.human.gabaergic, split.by = "donor_id")
for (sample in names(obj.human.gabaergic)) {
obj.human.gabaergic[[sample]] <- SCTransform(obj.human.gabaergic[[sample]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE)
}
features <- SelectIntegrationFeatures(object.list = obj.human.gabaergic, nfeatures = 2000)
obj.human.gabaergic <- PrepSCTIntegration(object.list = obj.human.gabaergic, anchor.features = features)
obj.human.anchors <- FindIntegrationAnchors(object.list = obj.human.gabaergic, normalization.method = "SCT", anchor.features = features)
obj.human.sct <- IntegrateData(anchorset = obj.human.anchors, normalization.method = "SCT")
obj.human.sct <- RunPCA(obj.human.sct, verbose = FALSE)
obj.human.sct <- RunUMAP(obj.human.sct, dims = 1:30, method = "umap-learn", reduction = "pca")
obj.human.sct <- FindNeighbors(obj.human.sct, reduction = "pca", dims = 1:30)
obj.human.sct <- FindClusters(obj.human.sct, resolution = 1, algorithm = 4, method = "igraph")
obj.human.gabaergic <- FindVariableFeatures(obj.human.gabaergic, selection.method = "vst", nfeatures = 3000)
obj.human.gabaergic <- FindVariableFeatures(obj.human.gabaergic, selection.method = "vst", nfeatures = 3000)
obj.human.gabaergic <- FindVariableFeatures(obj.human.gabaergic, selection.method = "vst", nfeatures = 3000)
DimPlot(obj.human.gabaergic, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "donor_id", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "donor_id", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#DimPlot(obj.human.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "donor_id", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#DimPlot(obj.human.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "subclass_label", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
cells.sst <- WhichCells(obj.human.sct, ident = c("Sst Chodl"))
colnames(obj.human.sct[[]])
cells.sst <- WhichCells(obj.human.sct$subclass_label, ident = c("Sst Chodl"))
cells.sst <- WhichCells(obj.human.sct, ident = c("Sst Chodl"))
cells.sst <- WhichCells(obj.human.sct, ident = c(Sst Chodl))
cells.sst <- WhichCells(obj.human.sct, ident = c((Sst Chodl))
cells.sst <- WhichCells(obj.human.sct, ident = c("Sst Chodl"))
cells.sst <- WhichCells(obj.human.sct, subclass_label = c("Sst Chodl"))
Idents(obj.human.sct) = "subclass_label"
cells.sst <- WhichCells(obj.human.sct, idents = c("Sst Chodl"))
obj.human.sct$subclass_label[cells.sst] <- "Sst"
Idents(obj.human.sct) = "subclass_label"
cells.sst <- WhichCells(obj.human.sct, idents = c("Sst Chodl"))
Idents(obj.human.sct) = "subclass_label"
cells.sst <- WhichCells(obj.human.sct, idents = c("Sst Chodl"))
Idents(obj.human.sct) = "subclass_label"
cells.sst <- WhichCells(obj.human.sct, ident = c("Sst Chodl"))
Idents(obj.human.sct) = "subclass_label"
cells.sst <- WhichCells(obj.human.sct, idents = c("Sst Chodl"))
DimPlot(obj.human.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "donor_id", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#DimPlot(obj.human.sct, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "subclass_label", raster = FALSE) + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
Idents(obj.human.sct) = "subclass_label"
cells.sst <- WhichCells(obj.human.sct, idents = c("Sst Chodl"))
DimPlot(obj.human.gabaergic, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.human.sct, reduction = "umap", group.by = "subclass_label", raster = FALSE) + xlim(-15, 12) + ylim(-15, 15) + coord_equal()
Idents(obj.human.sct) <- "subclass_label"
SaveH5Seurat(obj.human.sct, "E:/Human_M1/seurat/human_m1_gabaergic.h5seurat", overwrite = TRUE, verbose = TRUE)
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.human.gabaergic <- LoadH5Seurat("E:/Human_M1/seurat/human_m1_glutamatergic.h5Seurat")
library(Seurat)
library(reticulate)
library(arrow)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
obj.human.glutamatergic <- LoadH5Seurat("E:/Human_M1/seurat/human_m1_glutamatergic.h5Seurat")
obj.human.glutamatergic <- SplitObject(obj.human.glutamatergic, split.by = "donor_id")
for (sample in names(obj.human.glutamatergic)) {
obj.human.glutamatergic[[sample]] <- SCTransform(obj.human.glutamatergic[[sample]], vst.flavor = "v2", verbose = FALSE) %>%
RunPCA(npcs = 30, verbose = FALSE)
}
View(obj.human.anchors)
features <- SelectIntegrationFeatures(object.list = obj.human.glutamatergic, nfeatures = 2000)
obj.human.glutamatergic <- PrepSCTIntegration(object.list = obj.human.glutamatergic, anchor.features = features)
obj.human.anchors <- FindIntegrationAnchors(object.list = obj.human.glutamatergic, normalization.method = "SCT", anchor.features = features)
obj.human.sct <- IntegrateData(anchorset = obj.human.anchors, normalization.method = "SCT")
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Cat_M1/output/"
sample_IDs <- c("NW_TX0132-3", "NW_TX0133-5", "NW_TX0133-6", "NW_TX0133-7", "NW_TX0135-6", "NW_TX0135-7",
"NW_TX0137-1", "NW_TX0137-2", "NW_TX0141-12", "NW_TX0142-1", "NW_TX0145-9", "NW_TX0146-3")
objs <- c()
for (sample in sample_IDs) {
temp.obj.path <- paste(data_path, sample, "/outs/filtered_feature_bc_matrix/", sep = "")
temp.obj.data <- Read10X(temp.obj.path)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Cat_M1")
temp.obj$sample <- sample
temp.obj <- scrublet_R(seurat_obj = temp.obj)
objs <- append(objs, temp.obj)
}
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Cat_M1/output/"
sample_IDs <- c("NW_TX0132-3", "NW_TX0133-5", "NW_TX0133-6", "NW_TX0133-7", "NW_TX0135-6", "NW_TX0135-7",
"NW_TX0137-1", "NW_TX0137-2", "NW_TX0141-12", "NW_TX0142-1", "NW_TX0145-9", "NW_TX0146-3")
objs <- c()
for (sample in sample_IDs) {
temp.obj.path <- paste(data_path, sample, "/outs/filtered_feature_bc_matrix/", sep = "")
temp.obj.data <- Read10X(temp.obj.path)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Cat_M1")
temp.obj$sample <- sample
temp.obj <- scrublet_R(seurat_obj = temp.obj)
objs <- append(objs, temp.obj)
}
obj.cat <- merge(objs[[1]], y = objs[2:12], add.cell.ids = sample_IDs, project = "Cat_M1")
obj.cat <- merge(objs[[2]], y = objs[3:12], add.cell.ids = sample_IDs, project = "Cat_M1")
obj.cat <- merge(objs[[1]], y = objs[2:12], add.cell.ids = sample_IDs, project = "Cat_M1")
library(Seurat)
library(reticulate)
library(scrubletR)
library(ggplot2)
library(dplyr)
library(SeuratDisk)
library(data.table)
data_path <- "E:/Cat_M1/output/"
sample_IDs <- c("NW_TX0132-3", "NW_TX0133-5", "NW_TX0133-6", "NW_TX0133-7", "NW_TX0135-6", "NW_TX0135-7",
"NW_TX0137-1", "NW_TX0137-2", "NW_TX0141-12", "NW_TX0142-1", "NW_TX0145-9", "NW_TX0146-3")
objs <- c()
for (sample in sample_IDs) {
temp.obj.path <- paste(data_path, sample, "/outs/filtered_feature_bc_matrix/", sep = "")
temp.obj.data <- Read10X(temp.obj.path)
temp.obj <- CreateSeuratObject(counts = temp.obj.data, project = "Cat_M1")
temp.obj$sample <- sample
temp.obj <- scrublet_R(seurat_obj = temp.obj)
objs <- append(objs, temp.obj)
}
obj.cat <- merge(objs[[1]], y = objs[2:12], add.cell.ids = sample_IDs, project = "Cat_M1")
VlnPlot(obj.cat, features = c("nFeature_RNA"), group.by = "sample", raster = FALSE)
VlnPlot(obj.cat, features = c("nCount_RNA"), group.by = "sample", raster = FALSE)
FeatureScatter(obj.cat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA", raster = FALSE)
cell_mask <- Reduce(intersect,list(WhichCells(obj.cat, expression = nFeature_RNA > 700),
WhichCells(obj.cat, expression = nFeature_RNA < 6500),
WhichCells(obj.cat, expression = nCount_RNA < 40000)))
gene_mask <- rownames(obj.cat)[Matrix::rowSums(obj.cat[["RNA"]]@counts > 0) > 8]
obj.cat <- subset(obj.cat, features = gene_mask, cells = cell_mask)
obj.cat <- NormalizeData(obj.cat, normalization.method = "LogNormalize", scale.factor = 10000)
obj.cat <- FindVariableFeatures(obj.cat, selection.method = "vst", nfeatures = 3000)
all.genes <- rownames(obj.cat)
obj.cat <- ScaleData(obj.cat, features = all.genes)
obj.cat <- RunPCA(obj.cat, features = VariableFeatures(object = obj.cat))
ElbowPlot(obj.cat, ndims = 50)
obj.cat <- FindNeighbors(obj.cat, dims = 1:30)
obj.cat <- FindClusters(obj.cat, resolution = 1, algorithm = 4, method = "igraph")
obj.cat <- RunUMAP(obj.cat, dims = 1:30, method="umap-learn")
DimPlot(obj.cat, reduction = "umap", label = TRUE, raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.cat, reduction = "umap", group.by = "sample", raster = FALSE) + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, "nFeature_RNA", raster = FALSE) + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, "nCount_RNA", raster = FALSE) + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
DimPlot(obj.cat, reduction = "umap", group.by = "predicted_doublets", raster = FALSE) + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SNAP25"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SLC17A7"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("GAD2"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("CSF1R"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("MOG"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("PDGFRA"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#FeaturePlot(obj.cat, reduction = "umap", features = c("ALDH1L1"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("COL1A1"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("PVALB"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SST"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("VIP"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("LAMP5"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SNCG"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SNAP25"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SLC17A7"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("GAD2"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("CSF1R"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("MOG"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("PDGFRA"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#FeaturePlot(obj.cat, reduction = "umap", features = c("ALDH1L1"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("COL1A1"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("PVALB"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SST"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("VIP"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("LAMP5"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SNCG"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat.nonneuronal, reduction = "umap", features = c("Csf1r")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # microglia
FeaturePlot(obj.cat, reduction = "umap", features = c("Csf1r")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # microglia
FeaturePlot(obj.cat, reduction = "umap", features = c("CSF1R")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # microglia
FeaturePlot(obj.cat, reduction = "umap", features = c("MOG")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # oligodendrocytes
FeaturePlot(obj.cat, reduction = "umap", features = c("PDGFRA")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # OPC
FeaturePlot(obj.cat, reduction = "umap", features = c("AQP4")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # astrocytes
FeaturePlot(obj.cat, reduction = "umap", features = c("COL1A1")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # VLMC
FeaturePlot(obj.cat, reduction = "umap", features = c("TEK")) + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # endothelial
FeaturePlot(obj.cat, reduction = "umap", features = c("CSF1R"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # microglia
FeaturePlot(obj.cat, reduction = "umap", features = c("MOG"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # oligodendrocytes
FeaturePlot(obj.cat, reduction = "umap", features = c("PDGFRA"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # OPC
FeaturePlot(obj.cat, reduction = "umap", features = c("AQP4"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # astrocytes
FeaturePlot(obj.cat, reduction = "umap", features = c("COL1A1"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # VLMC
FeaturePlot(obj.cat, reduction = "umap", features = c("TEK"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # endothelial
#glutamatergic
FeaturePlot(obj.cat, reduction = "umap", features = c("SNAP25"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SLC17A7"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("GAD2"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("CSF1R"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("MOG"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("PDGFRA"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#FeaturePlot(obj.cat, reduction = "umap", features = c("ALDH1L1"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("COL1A1"), raster = FALSE) + NoLegend() + xlim(-18, 18) + ylim(-18, 18) + coord_equal()
#GABAergic
FeaturePlot(obj.cat, reduction = "umap", features = c("PVALB"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SST"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("VIP"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("LAMP5"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
FeaturePlot(obj.cat, reduction = "umap", features = c("SNCG"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal()
#non-neuronal
FeaturePlot(obj.cat, reduction = "umap", features = c("CSF1R"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # microglia
FeaturePlot(obj.cat, reduction = "umap", features = c("MOG"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # oligodendrocytes
FeaturePlot(obj.cat, reduction = "umap", features = c("PDGFRA"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # OPC
FeaturePlot(obj.cat, reduction = "umap", features = c("AQP4"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # astrocytes
FeaturePlot(obj.cat, reduction = "umap", features = c("COL1A1"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # VLMC
FeaturePlot(obj.cat, reduction = "umap", features = c("TEK"), raster = FALSE) + NoLegend() + xlim(-15, 15) + ylim(-15, 15) + coord_equal() # endothelial
